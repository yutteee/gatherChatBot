import { Position } from "./Position";
export declare type Player = {
    x: number;
    y: number;
    direction: SpriteDirection;
    name: string;
    affiliation: string;
    sprite: number;
    ghost: number;
    map: string;
    spotlighted: number;
    emote: Emote;
    workCondition: number;
    activelySpeaking: number;
    lastActive: string;
    busy: boolean;
    textStatus: string;
    emojiStatus: string;
    lastInputId: number;
    whisperId: string;
    isSignedIn: boolean;
    outfitString: string;
    eventStatus: string;
    inConversation: boolean;
    currentDesk: string;
    currentArea: string;
    goKartId: string;
};
import { SpriteDirectionEnum_ENUM as SpriteDirection, MoveDirectionEnum_ENUM as MoveDirection, EmoteEnum_ENUM as Emote } from "./generated_DO_NOT_TOUCH/events";
export { SpriteDirection, MoveDirection, Emote };
export declare const EMOTE_EMOJIS: {
    1: string;
    2: string;
    3: string;
    4: string;
    5: string;
    6: string;
};
export declare const EMOTE_SHORTCUTS: {
    1: string;
    2: string;
    3: string;
    4: string;
    5: string;
    6: string;
};
export declare const TEMPORARY_EMOTES: Emote[];
export declare function oppositeMoveDirection(direction: MoveDirection): MoveDirection | null;
export declare const positionAfterMove: (start: Position, dir: MoveDirection | null, dist?: number) => Position;
export declare function nextSpriteDirection(current: SpriteDirection, direction: MoveDirection): SpriteDirection;
export declare function directionToFacePlayer(player: Player, target: Player): MoveDirection | null;
export declare function whisperIdToColor(id: string): string;
