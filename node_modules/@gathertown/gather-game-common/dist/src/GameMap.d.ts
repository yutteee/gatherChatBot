import { Position } from "./Position";
import { Animation, Announcer, AreaPosition, Asset, AudioEmitter, InteractionEnum_ENUM as Interaction, WireObject, Point, Portal, Space, SpawnPoint } from "./generated_DO_NOT_TOUCH/events";
export { Interaction };
export declare class GameMap {
    id: string;
    dimensions: [number, number];
    collisions: string;
    backgroundImagePath: string;
    foregroundImagePath?: string;
    sprites?: number[];
    spaces: Space[];
    spawn?: Point;
    spawns: SpawnPoint[];
    portals: Portal[];
    announcer: Announcer[];
    audio?: AudioEmitter[];
    animations?: Animation[];
    assets?: Asset[];
    objects?: MapObject[];
    name?: string;
    defaultChat?: string;
    muteOnEntry?: boolean;
    useDrawnBG?: boolean;
    walls?: WallFloorBlock[];
    floors?: WallFloorBlock[];
    mostRecentUpdateId?: number;
    areas?: DBAreas;
}
export interface GameMapDB extends Omit<GameMap, "walls" | "floors"> {
    walls?: WallFloorDB;
    floors?: WallFloorDB;
}
export declare class WallBlock {
    x: number;
    y: number;
    wallType: number;
}
export declare class FloorBlock {
    x: number;
    y: number;
    floorType: number;
}
export declare type WallFloorBlock = WallBlock | FloorBlock;
export declare class WallFloorDB {
    [type: string]: string;
}
export declare class Tile {
    x: number;
    y: number;
    tileType: TileType;
    info?: Space | Portal;
}
declare type MakeFieldsRequired<T, K extends keyof T> = Required<Pick<T, K>> & T;
declare type WireMapObjectRequiredFields = "x" | "y" | "normal" | "highlighted" | "type" | "width" | "height";
declare type WireObjectWithRequireds = MakeFieldsRequired<WireObject, WireMapObjectRequiredFields>;
export interface MapObject extends Omit<WireObjectWithRequireds, "propertiesJson" | "_tags"> {
    _tags?: string[];
    properties?: Record<string, any>;
}
export declare function findMissingMapObjectFields(object: any): string[];
export declare function convertWireObjectToMapObject(wireObject: WireObject): MapObject;
export declare function convertMapObjectToWireObject(mapObject: MapObject): WireObject;
declare enum AreaCategory {
    RW_OFFICE_LOBBY = "RW_OFFICE_LOBBY",
    RW_OFFICE_MEETING = "RW_OFFICE_MEETING"
}
declare class DBAreas {
    [name: string]: {
        categories: AreaCategory;
        coords: AreaPosition[];
    };
}
export declare function convertStringToAreaCategory(s: string): AreaCategory;
export declare enum TileType {
    Impassable = 1,
    Spawn = 2,
    Portal = 3,
    Announcer = 4,
    Space = 5
}
declare const MODAL_INTERACTIONS: readonly [Interaction.EMBEDDED_WEBSITE, Interaction.POSTER, Interaction.VIDEO, Interaction.EXTERNAL_CALL, Interaction.NOTE, Interaction.MODAL_EXTENSION, Interaction.COMPONENT_MODAL];
export declare type ModalInteraction = typeof MODAL_INTERACTIONS[number];
export declare function interactionOpensModal(i: Interaction): boolean;
export declare function areaToCoords(coordsMap: boolean[][]): Position[];
