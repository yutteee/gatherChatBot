import { Player } from "@gathertown/gather-game-common";
export declare const isBrowser: boolean;
export interface SlidingWindowMetrics {
    min: number;
    max: number;
    avg: number;
    last: number;
}
export interface ServerClientEventContext {
    /**
     * The space this client is operating on. Mostly for convenience
     */
    spaceId: string;
    /**
     * If encId is present on the incoming event, then _player_ will be populated here. You are not guaranteed completeness in the player object, some fields may be undefined.
     */
    player?: Partial<Player>;
    /**
     * If encIdTarget is present on the incoming event, then _target_ will be populated. You are not guaranteed completeness, just like player; it's whatever is in the state.
     */
    target?: Partial<Player>;
    /**
     * The uid of the player, if present.
     */
    playerId?: string;
    /**
     * The uid of the target, if present.
     */
    targetId?: string;
}
export declare class SlidingWindow {
    maxSize: number;
    values: number[];
    _minValue?: number;
    _maxValue?: number;
    _lastValue?: number;
    constructor(maxSize: number);
    push(value: number): void;
    getLast(): number | undefined;
    getAverage(): number | undefined;
    getMin(): number | undefined;
    getMax(): number | undefined;
    getMetrics(): SlidingWindowMetrics;
}
